<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="./static/css/base.css">
  <link rel="stylesheet" href="./static/css/updateReviewerInfo.css">
  <script src="https://ssl.daumcdn.net/dmaps/map_js_init/postcode.v2.js"></script>
  <title>리뷰톡 - 리뷰어정보수정</title>
</head>
<body>  
  <h3>
    리뷰어 정보수정
  </h3>
  <table cellpadding="0" cellspacing="0">
    <tbody>
      <tr class="url">
        <td>블로그 URL</td>
        <td>
          <input type="text" value="http://blog.daum.net/cgimall"> 
          <button class="black-btn small-btn update">수정</button>
          <p class="sample">
            예시) http://blog.naver.com/test
            <br>리뷰에 사용할 블로그 URL을 입력해주세요.
            <br>(리뷰어 선정시 변경불가)
          </p>
        </td>
      </tr>
      <tr class="comment">
        <td>신청한마디</td>
        <td>
          <textarea>안녕하세요. 이 분야에서 5년째 활동중인 블로거입니다. 유입수 높은 블로거들과 연계 활동중이구요. 열심히 하겠습니다.
          </textarea>
          <p>
            신청한마디를 남겨주세요.
          </p>
        </td>
      </tr>
      <tr class="tel">
        <td>연락처</td>
        <td>
          <input type="tel" maxlength="11">
          <p>
            번호만 입력해주세요.
          </p>
        </td>
      </tr>
      <tr>
        <td>주소</td>
        <td>
          <input type="text" id="sample4_jibunAddress" placeholder="" onclick="sample4_execDaumPostcode()">
        </td>
      </tr>
      <tr>
        <td>상세주소</td>
        <td>
          <input type="text">
        </td>
      </tr>
    </tbody>
  </table>

  <button type="button" class="black-btn center submit" onclick="submitUpdateReviewerInfo()">
    신청완료
  </button>

  <script>
  function submitUpdateReviewerInfo () {
    window.close();
  }
  </script>

  <script>
  //본 예제에서는 도로명 주소 표기 방식에 대한 법령에 따라, 내려오는 데이터를 조합하여 올바른 주소를 구성하는 방법을 설명합니다.
  function sample4_execDaumPostcode() {
    new daum.Postcode({
      oncomplete: function(data) {
        // 각 주소의 노출 규칙에 따라 주소를 조합한다.
        // 내려오는 변수가 값이 없는 경우엔 공백('')값을 가지므로, 이를 참고하여 분기 한다.
        var fullAddr = ''; // 최종 주소 변수
        var extraAddr = ''; // 조합형 주소 변수

        // 사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.
        if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우
            fullAddr = data.roadAddress;

        } else { // 사용자가 지번 주소를 선택했을 경우(J)
            fullAddr = data.jibunAddress;
        }

        // 사용자가 선택한 주소가 도로명 타입일때 조합한다.
        if(data.userSelectedType === 'R'){
            //법정동명이 있을 경우 추가한다.
            if(data.bname !== ''){
                extraAddr += data.bname;
            }
            // 건물명이 있을 경우 추가한다.
            if(data.buildingName !== ''){
                extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);
            }
            // 조합형주소의 유무에 따라 양쪽에 괄호를 추가하여 최종 주소를 만든다.
            fullAddr += (extraAddr !== '' ? ' ('+ extraAddr +')' : '');
        }

        // 우편번호와 주소 정보를 해당 필드에 넣는다.
        document.getElementById('sample4_jibunAddress').value = fullAddr;
      }
    }).open();
  }
  </script>
</body>
</html>